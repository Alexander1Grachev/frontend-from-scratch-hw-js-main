
//–¶–µ–ª—å –∑–∞–¥–∞–Ω–∏—è: –†–∞–∑—Ä–∞–±–æ—Ç–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∏–ª—å–º–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –ø–∞—Ç—Ç–µ—Ä–Ω–∞ MVC. –ü–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∏–ª—å–º–∞, 
//–Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ "–§–∏–ª—å–º —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω!" –≤ message-box

//–ü—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–µ–π –º–æ–∂–µ—Ç–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –ø–æ—à–∞–≥–æ–≤—ã–º –ø–ª–∞–Ω–æ–º —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –Ω–∏–∂–µ, –Ω–æ –ª—É—á—à–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ üßô‚Äç‚ôÇÔ∏è

//–ü–æ—à–∞–≥–æ–≤—ã–π –ø–ª–∞–Ω —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏:



const model = {
  movies: [],
  addMovie(title, description) {
    const id = Math.random()
    const newMovie = { id, title, description }
    this.movies.push(newMovie)
    view.renderMovies(this.movies)
  },
  // your code
  deleteMovie(id) {
    this.movies = this.movies.filter((movies) => movies.id !== id)
    view.renderMovies(this.movies)
  }
}

const view = {
  init() {
    this.renderMovies(model.movies)

    const form = document.querySelector('.form')
    const inputTitle = document.querySelector('.input-title')
    const inputDescription = document.querySelector('.input-description')

    form.addEventListener('submit', function (event) {
      event.preventDefault()
      const title = inputTitle.value
      const description = inputDescription.value
      controller.addMovie(title, description)

      inputTitle.value = ''
      inputDescription.value = ''
    })

    // your code
    const list = document.querySelector('.list')
    list.addEventListener('click', function (event) {
      const targetElement = event.target
      if (targetElement.classList.contains('delete-button')) {
        const movieElement = targetElement.closest('.movie')//–ø–æ–∏—Å–∫ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
        const movieId = +movieElement.id
        controller.deleteMovie(movieId)//–Ω–∞–ø—Ä—è–º—É—é –≤—ã–∑—ã–≤–∞—é –º–µ—Ç–æ–¥ deleteMovie –æ–±—ä–µ–∫—Ç–∞ controller –∏ –ø–µ—Ä–µ–¥–∞—é movieId  –∫–∞–∫ –∞—Ä–≥—É–º–µ–Ω—Ç, 
      }


    })
  },
  renderMovies(movies) {
    const list = document.querySelector('.list')
    let moviesHTML = ''

    for (const movie of movies) {
      moviesHTML += `
        <li id="${movie.id}" class="movie">
          <b class="movie-title">${movie.title}</b>
          <p class="movie-description">${movie.description}</p>
          <button class="delete-button" type="button">–£–¥–∞–ª–∏—Ç—å üóë</button> 
        </li>
      `
    }

    list.innerHTML = moviesHTML
  },
  displayMessage(message, isError = false) {
    const messageBox = document.querySelector('.message-box')
    messageBox.textContent = message
    if (isError) {
      messageBox.classList.remove('success')
      messageBox.classList.add('error')
    } else {
      messageBox.classList.remove('error')
      messageBox.classList.add('success')
    }
  },
}

const controller = {
  addMovie(title, description) {
    if (title.trim() !== '' && description.trim() !== '') {
      model.addMovie(title, description)
      view.displayMessage('–§–∏–ª—å–º –¥–æ–±–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!')
    } else {
      view.displayMessage('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!', true)
    }
  },
  // your code
  deleteMovie(movieId) {
    model.deleteMovie(movieId)
    view.displayMessage('–§–∏–ª—å–º —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω!')
  }
}

function init() {
  view.init()
}

document.addEventListener('DOMContentLoaded', init)
